/*
* Name: Component animations
* Use: Animating between component states
* Notes: N/A
-------------------------------------------------------------- */

@keyframes progress-bar {
    0% {
        width: 0;
    }
    25% {
        width: 0;
    }
}

@keyframes draw {
    from { stroke-dashoffset: 565.48px; }
    to {}
}

@keyframes pulsate {
    0% {
        transform: scale(1, 1);
    }
    50% {
        transform: scale(1.3, 1.3);
    }
    100% {
        transform: scale(1, 1);
    }
}


@keyframes pulsate-small {
    0% {
        transform: scale(1, 1);
    }
    50% {
        transform: scale(1.125, 1.125);
    }
    100% {
        transform: scale(1, 1);
    }
}

@keyframes pulsate-fade {
    0% {
        transform: scale(0.1, .1);
        opacity: .3;
    }
    50% {
        opacity: .8;
    }
    100% {
        transform: scale(2, 2);
        opacity: 0;
    }
}


@keyframes bounce {
    0%, 20%, 40%, 60%, 80%, 100% {
        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    0% {
        opacity: 0;
        transform: scale3d(0.3, 0.3, 0.3);
    }
    20% {
        transform: scale3d(1.1, 1.1, 1.1);
    }
    40% {
        transform: scale3d(0.9, 0.9, 0.9);
    }
    60% {
        opacity: 1;
        transform: scale3d(1.03, 1.03, 1.03);
    }
    80% {
        transform: scale3d(0.97, 0.97, 0.97);
    }
    100% {
        opacity: 1;
        transform: scale3d(1, 1, 1);
    }
}

@keyframes bounce-out {
  20% {
    transform: scale3d(.9, .9, .9);
  }

  50%, 55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }

  100% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }
}

@keyframes bounce-down {
    0%, 60%, 75%, 90%, 100% {
        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    0% {
        transform: translate3d(0, -3000px, 0);
    }
    60% {
        transform: translate3d(0, 25px, 0);
    }
    75% {
        transform: translate3d(0, -10px, 0);
    }
    90% {
        transform: translate3d(0, 5px, 0);
    }
    100% {
        transform: none;
    }
}

@keyframes zoom-in-up {
    from {
        opacity: 0;
        transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    60% {
        opacity: 1;
        transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
}

@keyframes zoom-in-down {
    from {
        opacity: 0;
        transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
        animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    60% {
        opacity: 1;
        transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
}


@keyframes shake {
    0%, 100% {
        transform: translate3d(0, 0, 0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translate3d(-1px, 0, 0);
    }
    20%, 40%, 60%, 80% {
        transform: translate3d(1px, 0, 0);
    }
}

@keyframes fade-pulse {
    0% { opacity: 0; }
    50% { opacity: 1; }
    100% { opacity: 0; }
}

@keyframes fade-in-static {
    0% {
        opacity: 0;
        visibility: hidden;
    }

  100% {
        opacity: 1;
        visibility: visible;
    }
}


@keyframes fade-in-up {
    0% {
        opacity: 0;
        visibility: hidden;
        transform: translate3d(0, 100%, 0);
    }

    100% {
        opacity: 1;
        visibility: visible;
        transform: none;
    }
}

@keyframes fade-in-down {
  0% {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }

  100% {
    opacity: 1;
    transform: none;
  }
}

.fade-pulse {
    animation-name: fade-pulse;
    animation-duration: 1.25s;
    animation-iteration-count: infinite;
}

.fade-in-up, %fade-in-up {
    animation-name: fade-in-up;
    animation-duration: .25s;
}

.fade-in-up-md {
    @include respond-min($global-screen-sm) {
        animation-name: fade-in-up;
        animation-duration: .25s;
    }
}

.fade-in-static, %fade-in-static {
    animation-name: fade-in-static;
    animation-duration: .25s;
}

.shake {
    animation-name: shake;
    animation-duration: .75s;
}

.bounce {
    animation-name: bounce;
    animation-duration: .7s;
}

.bounce-out {
    animation-name: bounce-out;
    animation-duration: .7s;
}

.bounce-down {
    animation-name: bounce-down;
    animation-duration: .7s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in-out;
}

.zoom-in-up {
    animation-name: zoom-in-up;
    animation-duration: .7s;
}

.zoom-in-down {
    animation-name: zoom-in-down;
    animation-duration: .7s;
}

.pulsate {
    animation-name: pulsate;
    animation-duration: .75s;
}

.pulsate-small {
    animation-name: pulsate-small;
    animation-duration: .5s;
}

.pulsate-continuous, %pulsate-continuous {
    animation-name: pulsate-small;
    animation-duration: 1.75s;
    animation-iteration-count: infinite;
}

.pulsate-fade {
    animation-name: pulsate-fade;
    animation-duration: 1s;
}

.fade, %fade {
    @include opacity(0);
    transition: opacity .25s ease-in-out;
    &.in, &.fade--in {
        @include opacity(1);
        transition: opacity .25s ease-in-out;
    }
}

.fade-slow {
    @include opacity(0);
    transition: opacity .4s ease-in-out;
    &.in, &.fade--in {
        @include opacity(1);
        transition: opacity .4s ease-in-out;
    }
}

.fade-in {
    @include opacity(0);
    transition: opacity .25s ease-in;
    height: 0;
    overflow: hidden;
}

.fade-in--visible {
    @include opacity(1);
    height: auto;
    overflow: visible;
    transition: opacity .25s ease-in;
}

.collapse {
    display: none;
    &.in { display: block;}
}

.collapsing {
    position: relative;
    height: 0;
    overflow: hidden;
    transition: height .35s ease;
}


/* Non-keyframe animations
-------------------------------------------------------------- */

.animate { backface-visibility: hidden; }

.animate--will-flip { position: relative; }

.animate--has-flipped { perspective: 1000px; }

.animate__target { will-change: transform; }

.animate__target--pre {
    @include opacity(0);
    visibility: hidden;
    .no-cssanimations &, .is-chrome-ios & {
        @include opacity(1);
        visibility: visible;
    }
}

.animate__target--post {
    @include opacity(1);
    visibility: visible;
}

.animate__target--flip {
    transform-style: preserve-3d;
    backface-visibility: hidden;
    transition: transform .5s ease-in-out;
}

.animate__target--flip-front {
    transform: rotateY(0deg);
    z-index: 2;
    .animate--has-flipped & {
        transform: rotateY(180deg);
        z-index: 1;
    }
}

.animate__target--flip-back {
    position: absolute;
    opacity: 0;
    visibility: hidden;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    transform: rotateY(-180deg);
    z-index: 1;
    .animate--has-flipped & {
        transform: rotateY(0deg);
        z-index: 2;
        visibility: visible;
        opacity: 1;
    }
}

.animate__target--push-logo {
    @include respond-min($global-screen-sm) { margin-top: 6rem; }
    @include respond-max($global-screen-sm) { margin-top: 2rem; }
    .no-csstransforms3d &, .no-csstransforms & {
        @include respond-min($global-screen-sm) { margin-top: 3rem; }
        @include respond-max($global-screen-sm) { margin-top: 1rem; }
    }
}

.angular-fade-in-up.ng-enter, .angular-fade-in-down.ng-enter {
    transition: all .2s cubic-bezier(0.175, 0.885, 0.320, 1);
    opacity:0;
    transform: translateY(50px);
}

.angular-fade-in-up.ng-enter { transform: translateY(50px); }
.angular-fade-in-down.ng-enter { transform: translateY(-50px); }


.angular-fade-in-up.ng-enter-stagger, .angular-fade-in-down.ng-enter-stagger {
    /* this will have a 100ms delay between each successive leave animation */
    transition-delay: 0.1s;

    /* As of 1.4.4, this must always be set: it signals ngAnimate
      to not accidentally inherit a delay property from another CSS class */
    transition-duration: 0s;
}

.angular-fade-in-up.ng-enter.ng-enter-active, .angular-fade-in-down.ng-enter.ng-enter-active  {
    opacity:1;
    transform: translateY(0);
}
